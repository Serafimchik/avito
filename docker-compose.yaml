version: '3'
volumes:
  postgres_volume:

services:
  pg:
    image: postgres:14-alpine3.17
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data

  goose:
    image: golang:1.23
    working_dir: /avito
    command: >
      sh -c "go install github.com/pressly/goose/v3/cmd/goose@latest &&
            goose up"
    depends_on:
      - pg # Goose запустится только после PostgreSQL
    environment:
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DATABASE_NAME: ${PG_DATABASE_NAME}
    volumes:
      - .:/avito # Монтируем текущую директорию проекта для доступа к миграциям

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PG_HOST: pg # Имя контейнера PostgreSQL
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DATABASE_NAME: ${PG_DATABASE_NAME}
      PG_PORT: 5432
    ports:
      - "8080:8080" # Доступ к приложению через localhost:8080
    depends_on:
      - pg # Приложение запустится только после PostgreSQL
      - goose # Приложение ждёт применения миграций через Goose